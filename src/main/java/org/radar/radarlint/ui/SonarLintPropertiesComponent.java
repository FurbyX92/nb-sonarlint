package org.radar.radarlint.ui;

/**
 *
 * @author VÃ­ctor
 */
public class SonarLintPropertiesComponent extends javax.swing.JPanel {

    /**
     * Creates new form SonarLintPropertiesComponent
     */
    public SonarLintPropertiesComponent() {
        initComponents();
    }
    
    public boolean isSonarLintActive() {
        return activeCheckbox.isSelected();
    }
    
    public void setSonarLintActive(boolean active) {
        activeCheckbox.setSelected(active);
    }
    
    public String getExcludedFilePatterns() {
        return excludedFilePatternsTextfield.getText();
    }
    
    public void setExcludedFilePatterns(String patterns) {
        excludedFilePatternsTextfield.setText(patterns);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activeCheckbox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        excludedFilePatternsTextfield = new javax.swing.JTextArea();

        org.openide.awt.Mnemonics.setLocalizedText(activeCheckbox, org.openide.util.NbBundle.getMessage(SonarLintPropertiesComponent.class, "SonarLintPropertiesComponent.activeCheckbox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SonarLintPropertiesComponent.class, "SonarLintPropertiesComponent.jLabel1.text")); // NOI18N

        excludedFilePatternsTextfield.setColumns(20);
        excludedFilePatternsTextfield.setRows(5);
        jScrollPane1.setViewportView(excludedFilePatternsTextfield);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(activeCheckbox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activeCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activeCheckbox;
    private javax.swing.JTextArea excludedFilePatternsTextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
